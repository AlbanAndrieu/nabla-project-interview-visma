<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<!-- @version $Revision: $ $Date: $ $Author: $ $State: $ -->
	<!-- @formatter:off -->
	<parent>
		<artifactId>visma</artifactId>
		<groupId>com.nabla.project.sample.interview.visma</groupId>
		<version>1.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>core</artifactId>
	<packaging>jar</packaging>
	<name>Maven core for visma</name>
	<description>Maven core for visma</description>

	<properties>
		<bundle.namespace>com.nabla.project.sample.interview.visma.core</bundle.namespace>
	</properties>

	<!-- DEPENDENCIES -->
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<exclusions>
				<!-- circular dependency -->
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- <dependency> <groupId>org.mockito</groupId> <artifactId>mockito-all</artifactId>
			<scope>test</scope> </dependency> -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<optional>true</optional>
			<!-- needed only for annotations -->
		</dependency>
		<!-- 
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		-->
		<dependency>
			<groupId>org.jboss.spec.javax.xml.bind</groupId>
			<artifactId>jboss-jaxb-api_2.2_spec</artifactId>
			<!--<version>1.0.3.Final</version>-->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>stax</groupId>
			<artifactId>stax-api</artifactId>
			<!--<version>1.0.1</version>-->
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!--		
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<scope>test</scope>
		</dependency>
		-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.nabla.project.visma.Visma</mainClass>
							<addClasspath>true</addClasspath>
						</manifest>
						<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>maven</executable>
					<mainClass>com.nabla.project.visma.Visma</mainClass>
					<!-- optional
				  <workingDirectory>/tmp</workingDirectory>
				   -->
					<arguments>
						<argument>-XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:LogFile=hotspot.log</argument>
						<!--<argument>myproject:dist</argument> -->
					</arguments>

				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
			</plugin>

			<plugin>
				<!--groupId>com.pyx4me</groupId-->
				<groupId>com.github.wvengen</groupId>
				<artifactId>proguard-maven-plugin</artifactId>
				<version>${maven.proguard.plugin.version}</version>
				<executions>
					<execution>
						<id>proguard</id>
						<phase>package</phase>
						<goals>
							<goal>proguard</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sf.proguard</groupId>
						<artifactId>proguard-base</artifactId>
						<version>${net.sf.proguard.version}</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
				<configuration>
					<!-- Our application is so big that ProGuard had ran out of memory -->
					<!--<maxMemory>1024m</maxMemory>-->

					<!-- File with proguard configuration -->
					<!--<proguardInclude>${basedir}/proguard.conf</proguardInclude>-->
					<proguardVersion>${net.sf.proguard.version}</proguardVersion>
					<obfuscate>true</obfuscate>
					<!--<injarNotExistsSkip>true</injarNotExistsSkip>
					<includeDependency>false</includeDependency>-->
					<injar>${project.build.finalName}.jar</injar>
					<outjar>${project.build.finalName}.jar</outjar>
					<attach>false</attach>
					<addMavenDescriptor>false</addMavenDescriptor>
					<!-- Now exclude all modules that are embedded in the jar, so that
						ProGuard won't see redefinition of each single class.
						You don't have to write down your main module. -->
					<exclusions>
						<exclusion>
							<groupId>com.sun</groupId>
							<artifactId>tools</artifactId>
						</exclusion>
						<exclusion>
							<groupId>xerces</groupId>
							<artifactId>xercesImpl</artifactId>
						</exclusion>
						<!--
						<exclusion>
							<groupId>com.yourcompany</groupId>
							<artifactId>data</artifactId>
						</exclusion>
						-->
					</exclusions>
					<options>
						<!--<option>-keep public class * { public protected *; }</option>-->
						<option>-keep public class com.nabla.project.visma.Visma{public static void main(java.lang.String[]);}</option>
						<!--<option>-dontwarn com.nabla.project.visma.**</option>-->
						<option>-keep class com.nabla.project.visma.api.**{ *; }</option>
						<option>-keep class com.nabla.project.visma.House{ *; }</option>
						<option>-keep class com.nabla.project.visma.HouseLoan{ *; }</option>
						<option>-keep class com.nabla.project.visma.Payment{ *; }</option>
						<option>-keep class com.nabla.project.visma.BasicPaymentMethod{ *; }</option>
						<!--<option>-ignorewarnings</option>-->
						<option>-allowaccessmodification</option>
						<option>-dontskipnonpubliclibraryclasses</option>
						<option>-dontskipnonpubliclibraryclassmembers</option>
						<option>-optimizations !code/allocation/variable</option>
					</options>
					<libs>
						<lib>${java.bootstrap.classes}</lib>
						<lib>${java.cryptographic.extension.classes}</lib>
						<lib>${java.secure.socket.extension.classes}</lib>
					</libs>
				</configuration>
			</plugin>

			<!-- for gridgain
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*BasicPaymentMethodTest.java</include>
					</includes>

					<argline>-javaagent:${project.build.directory}/libs/aspectjweaver-${aspect.jweaver.version}.jar</argline>
					<workingdirectory>${project.build.directory}/libs/</workingdirectory>
				</configuration>
			</plugin>
-->
			<!-- for gridgain
			<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>copy</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy</goal>
							</goals>
							<configuration>
								<artifactitems>
									<artifactitem>
										<groupId>org.aspectj</groupId>
										<artifactId>aspectjweaver</artifactId>
										<version>${aspectj.weaver.version}</version>
										<outputdirectory>${project.build.directory}/libs/</outputdirectory>
									</artifactitem>
								</artifactitems>
							</configuration>
						</execution>
					</executions>
			</plugin>
-->
		</plugins>
	</build>

</project>

#!/usr/bin/env python
import os
import re
import sys
from subprocess import check_output
# Collect the parameters
commit_msg_filepath = sys.argv[1]
# Figure out which branch we're on
branch = check_output(['git', 'symbolic-ref', '--short', 'HEAD']).strip()
print "commit-msg: On branch '%s'" % branch
regex = re.compile('^feature|^bugfix')
# Check the commit message if we're on an issue branch
if re.match(regex, branch):
    print "commit-msg: Oh hey, it's an issue branch."

    pattern = re.compile(r'[A-Z]{3,5}-[0-9]+')  # Matches any unique issue code
    issue = re.search(pattern, branch).group(0)  # Extract issue code

    with open(commit_msg_filepath, 'r') as f:

        #from jira import JIRA
        #options = {'server': 'https://nabla/jira'}
        #jira = JIRA(options, basic_auth=('test', 'TODO'))
        #issue_to_check = jira.issue(issue)
        # print issue_to_check.fields.project.key             # 'JRA'
        # print issue_to_check.fields.issuetype.name          # 'New Feature'
        # print issue_to_check.fields.reporter.displayName    # 'Mike Cannon-Brookes [Atlassian]'

        required_message = "%s" % (issue)

        content = f.read()
        if not content.startswith(required_message):
            print "commit-msg: ERROR! The commit message must start with '%s'" % required_message
            sys.exit(1)
